// <auto-generated />
using System;
using MVCTurizam.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCTurizam.Migrations
{
    [DbContext(typeof(MVCTurizamContext))]
    [Migration("20230212133934_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCTurizam.Models.Destinacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("CenaKarta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Dalecina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontinent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaOdDestinacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VodicId");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("MVCTurizam.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SlikaOdPasos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("MVCTurizam.Models.Patuvanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DatumDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumOd")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinacijaId")
                        .HasColumnType("int");

                    b.Property<int>("KlientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinacijaId");

                    b.HasIndex("KlientId");

                    b.ToTable("Patuvanje");
                });

            modelBuilder.Entity("MVCTurizam.Models.Vodic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Iskustvo")
                        .HasColumnType("int");

                    b.Property<int?>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vodic");
                });

            modelBuilder.Entity("MVCTurizam.Models.Destinacija", b =>
                {
                    b.HasOne("MVCTurizam.Models.Vodic", "Vodic")
                        .WithMany("Destinacijas")
                        .HasForeignKey("VodicId");

                    b.Navigation("Vodic");
                });

            modelBuilder.Entity("MVCTurizam.Models.Patuvanje", b =>
                {
                    b.HasOne("MVCTurizam.Models.Destinacija", "Destinacija")
                        .WithMany("Patuvanje")
                        .HasForeignKey("DestinacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCTurizam.Models.Klient", "Klient")
                        .WithMany("Patuvanje")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinacija");

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("MVCTurizam.Models.Destinacija", b =>
                {
                    b.Navigation("Patuvanje");
                });

            modelBuilder.Entity("MVCTurizam.Models.Klient", b =>
                {
                    b.Navigation("Patuvanje");
                });

            modelBuilder.Entity("MVCTurizam.Models.Vodic", b =>
                {
                    b.Navigation("Destinacijas");
                });
#pragma warning restore 612, 618
        }
    }
}
